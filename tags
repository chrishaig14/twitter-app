!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a74b8474/
#login-view	src/index.css	/^#login-view {$/;"	i
#login-view form	src/index.css	/^  #login-view form {$/;"	s
#login-view form *	src/index.css	/^    #login-view form * {$/;"	s
#login-view form .login-buttons	src/index.css	/^    #login-view form .login-buttons {$/;"	c
#login-view form .login-buttons *	src/index.css	/^      #login-view form .login-buttons * {$/;"	s
#login-view form label *	src/index.css	/^    #login-view form label * {$/;"	s
#signup-view	src/index.css	/^#signup-view {$/;"	i
#signup-view form	src/index.css	/^  #signup-view form {$/;"	s
#signup-view form *	src/index.css	/^    #signup-view form * {$/;"	s
.App	src/App.css	/^.App {$/;"	c
.App-header	src/App.css	/^.App-header {$/;"	c
.App-link	src/App.css	/^.App-link {$/;"	c
.App-logo	src/App.css	/^.App-logo {$/;"	c
.comment	src/index.css	/^.comment {$/;"	c
.comment *	src/index.css	/^  .comment * {$/;"	s
.comment .comment-content	src/index.css	/^  .comment .comment-content {$/;"	c
.comment .comment-user	src/index.css	/^  .comment .comment-user {$/;"	c
.comment .comment-user-pic	src/index.css	/^  .comment .comment-user-pic {$/;"	c
.comment .comment-user:hover	src/index.css	/^    .comment .comment-user:hover {$/;"	c
.comment .comment-user:visited	src/index.css	/^    .comment .comment-user:visited {$/;"	c
.current-user-info	src/index.css	/^.current-user-info {$/;"	c
.current-user-info .current-user-pic	src/index.css	/^  .current-user-info .current-user-pic {$/;"	c
.current-user-info .current-username	src/index.css	/^  .current-user-info .current-username {$/;"	c
.feed-view	src/index.css	/^.feed-view {$/;"	c
.feed-view .new-post	src/index.css	/^  .feed-view .new-post {$/;"	c
.followed-user	src/index.css	/^.followed-user {$/;"	c
.followed-user .followed-user-pic	src/index.css	/^  .followed-user .followed-user-pic {$/;"	c
.followed-user button	src/index.css	/^  .followed-user button {$/;"	s
.following-view	src/index.css	/^.following-view {$/;"	c
.header	src/index.css	/^.header {$/;"	c
.header *	src/index.css	/^  .header * {$/;"	s
.header .submit-search-btn	src/index.css	/^  .header .submit-search-btn {$/;"	c
.main-post	src/index.css	/^.main-post {$/;"	c
.modal-content	src/index.css	/^.modal-content {$/;"	c
.modal-hide	src/index.css	/^.modal-hide {$/;"	c
.modal-show	src/index.css	/^.modal-show {$/;"	c
.new-comment	src/index.css	/^.new-comment {$/;"	c
.new-comment form	src/index.css	/^  .new-comment form {$/;"	s
.new-comment form input[type="text"]	src/index.css	/^    .new-comment form input[type="text"] {$/;"	s
.new-post	src/index.css	/^.new-post {$/;"	c
.new-post form	src/index.css	/^  .new-post form {$/;"	s
.new-post form .new-post-text	src/index.css	/^    .new-post form .new-post-text {$/;"	c
.other-user-view-main	src/index.css	/^.other-user-view-main {$/;"	c
.other-user-view-main .other-user-info	src/index.css	/^  .other-user-view-main .other-user-info {$/;"	c
.other-user-view-main .other-user-info .other-user-pic	src/index.css	/^    .other-user-view-main .other-user-info .other-user-pic {$/;"	c
.other-user-view-main .other-user-info .username	src/index.css	/^    .other-user-view-main .other-user-info .username {$/;"	c
.other-user-view-main .user-posts	src/index.css	/^  .other-user-view-main .user-posts {$/;"	c
.other-user-view-main .user-posts-title	src/index.css	/^  .other-user-view-main .user-posts-title {$/;"	c
.post-container	src/index.css	/^.post-container {$/;"	c
.post-container .post	src/index.css	/^  .post-container .post {$/;"	c
.post-content	src/index.css	/^.post-content {$/;"	c
.post-footer	src/index.css	/^.post-footer {$/;"	c
.post-header	src/index.css	/^.post-header {$/;"	c
.post-main	src/index.css	/^.post-main {$/;"	c
.post-main-container	src/index.css	/^.post-main-container {$/;"	c
.post-user	src/index.css	/^.post-user {$/;"	c
.post-user:hover	src/index.css	/^  .post-user:hover {$/;"	c
.post-user:visited	src/index.css	/^  .post-user:visited {$/;"	c
.profile	src/index.css	/^.profile {$/;"	c
.profile .profile-form	src/index.css	/^  .profile .profile-form {$/;"	c
.profile .profile-form .profile-pic	src/index.css	/^    .profile .profile-form .profile-pic {$/;"	c
.profile .profile-form .profile-pic-input	src/index.css	/^    .profile .profile-form .profile-pic-input {$/;"	c
.profile-pic-label	src/index.css	/^button, .profile-pic-label {$/;"	c
.profile-pic-label:active	src/index.css	/^  button:active, .profile-pic-label:active {$/;"	c
.profile-pic-label:focus	src/index.css	/^  button:focus, .profile-pic-label:focus {$/;"	c
.profile-pic-label:hover	src/index.css	/^  button:hover, .profile-pic-label:hover {$/;"	c
.quote	src/index.css	/^.quote {$/;"	c
.quote .post-user	src/index.css	/^  .quote .post-user {$/;"	c
.quote .userpic	src/index.css	/^  .quote .userpic {$/;"	c
.quote-form	src/index.css	/^.quote-form {$/;"	c
.quote-form input	src/index.css	/^  .quote-form input {$/;"	s
.retweet-content	src/index.css	/^.retweet-content {$/;"	c
.retweet-header	src/index.css	/^.retweet-header {$/;"	c
.retweet-w-comment	src/index.css	/^.retweet-w-comment {$/;"	c
.round	src/index.css	/^.round {$/;"	c
.search-results	src/index.css	/^.search-results {$/;"	c
.share	src/index.css	/^.share {$/;"	c
.share .main-post	src/index.css	/^  .share .main-post {$/;"	c
.simple-post	src/index.css	/^.simple-post {$/;"	c
.simple-post .post-content	src/index.css	/^  .simple-post .post-content {$/;"	c
.simple-post .post-footer button	src/index.css	/^  .simple-post .post-footer button {$/;"	s
.simple-post .post-header	src/index.css	/^  .simple-post .post-header {$/;"	c
.simple-post .post-header .post-time	src/index.css	/^    .simple-post .post-header .post-time {$/;"	c
.simple-post .post-header .userpic	src/index.css	/^    .simple-post .post-header .userpic {$/;"	c
.user-info	src/index.css	/^.user-info {$/;"	c
.user-info .user-info-info	src/index.css	/^  .user-info .user-info-info {$/;"	c
.user-info .user-info-pic	src/index.css	/^  .user-info .user-info-pic {$/;"	c
.user-info .user-info-username	src/index.css	/^  .user-info .user-info-username {$/;"	c
.user-tag	src/index.css	/^.user-tag {$/;"	c
.user-tag:hover	src/index.css	/^  .user-tag:hover {$/;"	c
.user-tag:visited	src/index.css	/^  .user-tag:visited {$/;"	c
.userpic	src/index.css	/^.userpic {$/;"	c
.with-border	src/index.css	/^.with-border {$/;"	c
AnonymousFunctionfa4bf29b0100	src/selectors.js	/^    posts.sort(function (a, b) {$/;"	f
App	src/components/App.js	/^class App extends React.Component {$/;"	c
Authorization	src/actions.js	/^        let h = {"Authorization": getState().main.token};$/;"	p	class:h
Comment	src/components/Comment.js	/^class Comment extends React.Component {$/;"	c
EditProfile	src/components/EditProfile.js	/^class EditProfile extends React.Component {$/;"	c
FeedViewComponent	src/components/FeedViewComponent.js	/^class FeedViewComponent extends React.Component {$/;"	c
FollowingViewComponent	src/components/FollowingViewComponent.js	/^class FollowingViewComponent extends React.Component {$/;"	c
HeaderComponent	src/components/HeaderComponent.js	/^class HeaderComponent extends React.Component {$/;"	c
LoginViewComponent	src/components/LoginViewComponent.js	/^class LoginViewComponent extends React.Component {$/;"	c
ModalComponent	src/components/ModalComponent.js	/^class ModalComponent extends Component {$/;"	c
NewCommentComponent	src/components/NewCommentComponent.js	/^class NewCommentComponent extends React.Component {$/;"	c
NewPostComponent	src/components/NewPostComponent.js	/^class NewPostComponent extends React.Component {$/;"	c
PostComponent	src/components/PostComponent.js	/^class PostComponent extends React.Component {$/;"	c
PostContent	src/components/PostContent.js	/^class PostContent extends React.Component {$/;"	c
Quote	src/components/Quote.js	/^class Quote extends React.Component {$/;"	c
SearchBox	src/components/SearchBox.js	/^class SearchBox extends React.Component {$/;"	c
SearchResultsViewComponent	src/components/SearchResultsViewComponent.js	/^class SearchResultsViewComponent extends React.Component {$/;"	c
SignupViewComponent	src/components/SignupViewComponent.js	/^class SignupViewComponent extends React.Component {$/;"	c
UserCardComponent	src/components/UserCardComponent.js	/^class UserCardComponent extends React.Component {$/;"	c
UserPicComponent	src/components/UserPicComponent.js	/^class UserPicComponent extends React.Component {$/;"	c
UserViewComponent	src/components/UserViewComponent.js	/^class UserViewComponent extends React.Component {$/;"	c
body	src/index.css	/^body {$/;"	s
button	src/index.css	/^button, .profile-pic-label {$/;"	s
button:active	src/index.css	/^  button:active, .profile-pic-label:active {$/;"	s
button:focus	src/index.css	/^  button:focus, .profile-pic-label:focus {$/;"	s
button:hover	src/index.css	/^  button:hover, .profile-pic-label:hover {$/;"	s
changeCommentContent	src/actions.js	/^export const changeCommentContent = (content) => ({$/;"	C
checkFollowed	src/actions.js	/^export const checkFollowed = (username) => {$/;"	C
checkValidServiceWorker	src/serviceWorker.js	/^function checkValidServiceWorker(swUrl, config) {$/;"	f
code	src/index.css	/^code {$/;"	s
commentSection	src/components/PostComponent.js	/^        this.state = {commentSection: false, userpic: "", comments: [], quoting: false, quoteCon/;"	p	class:PostComponent.constructor.state
comments	src/components/PostComponent.js	/^        this.state = {commentSection: false, userpic: "", comments: [], quoting: false, quoteCon/;"	p	class:PostComponent.constructor.state
componentDidMount	src/components/Comment.js	/^    componentDidMount() {$/;"	m	class:Comment
componentDidMount	src/components/FeedViewComponent.js	/^    componentDidMount() {$/;"	m	class:FeedViewComponent
componentDidMount	src/components/FollowingViewComponent.js	/^    componentDidMount() {$/;"	m	class:FollowingViewComponent
componentDidMount	src/components/SearchResultsViewComponent.js	/^    componentDidMount() {$/;"	m	class:SearchResultsViewComponent
componentDidMount	src/components/UserCardComponent.js	/^    componentDidMount() {$/;"	m	class:UserCardComponent
componentDidMount	src/components/UserPicComponent.js	/^    componentDidMount() {$/;"	m	class:UserPicComponent
componentDidMount	src/components/UserViewComponent.js	/^    componentDidMount() {$/;"	m	class:UserViewComponent
componentDidUpdate	src/components/ModalComponent.js	/^    componentDidUpdate(prevProps, prevState, snapshot) {$/;"	m	class:ModalComponent
componentDidUpdate	src/components/SearchBox.js	/^    componentDidUpdate(prevProps, prevState, snapshot) {$/;"	m	class:SearchBox
componentDidUpdate	src/components/SearchResultsViewComponent.js	/^    componentDidUpdate(prevProps, prevState, snapshot) {$/;"	m	class:SearchResultsViewComponent
confirmPassword	src/components/SignupViewComponent.js	/^        this.state = {username: "", password: "", confirmPassword: "", signup: false};$/;"	p	class:SignupViewComponent.constructor.state
constructor	src/components/Comment.js	/^    constructor(props) {$/;"	m	class:Comment
constructor	src/components/EditProfile.js	/^    constructor(props) {$/;"	m	class:EditProfile
constructor	src/components/LoginViewComponent.js	/^    constructor(props) {$/;"	m	class:LoginViewComponent
constructor	src/components/NewPostComponent.js	/^    constructor(props) {$/;"	m	class:NewPostComponent
constructor	src/components/PostComponent.js	/^    constructor(props) {$/;"	m	class:PostComponent
constructor	src/components/PostContent.js	/^    constructor(props) {$/;"	m	class:PostContent
constructor	src/components/Quote.js	/^    constructor(props) {$/;"	m	class:Quote
constructor	src/components/SearchBox.js	/^    constructor(props) {$/;"	m	class:SearchBox
constructor	src/components/SignupViewComponent.js	/^    constructor(props) {$/;"	m	class:SignupViewComponent
dateToString	src/components/PostComponent.js	/^    static dateToString(date) {$/;"	m	class:PostComponent
encodeImageFileAsURL	src/components/EditProfile.js	/^    encodeImageFileAsURL(file, callback) {$/;"	m	class:EditProfile
fetchFeed	src/actions.js	/^export const fetchFeed = () => {$/;"	C
fetchFollowing	src/actions.js	/^export const fetchFollowing = () => {$/;"	C
fetchLogin	src/actions.js	/^export const fetchLogin = (username, password) => {$/;"	C
fetchPostComments	src/actions.js	/^export const fetchPostComments = (postId) => {$/;"	C
fetchSearch	src/actions.js	/^export const fetchSearch = (query) => {$/;"	C
fetchUser	src/actions.js	/^export const fetchUser = () => {$/;"	C
fetchUserPosts	src/actions.js	/^export const fetchUserPosts = (username) => {$/;"	C
follow	src/actions.js	/^export const follow = (username) => {$/;"	C
followUser	src/actions.js	/^export const followUser = (id) => {$/;"	C
getUserImage	src/actions.js	/^export const getUserImage = (username) => {$/;"	C
getUserInfo	src/actions.js	/^export const getUserInfo = (username) => {$/;"	C
h	src/actions.js	/^        let h = {"Authorization": getState().main.token};$/;"	c
hideModal	src/actions.js	/^export const hideModal = () => ({$/;"	C
history	src/index.js	/^const history = createBrowserHistory();$/;"	C
hr	src/index.css	/^hr {$/;"	s
initialState	src/index.js	/^let initialState = {$/;"	c
input[type="password"]	src/index.css	/^input[type="text"], input[type="password"] {$/;"	s
input[type="password"] :focus	src/index.css	/^input[type="text"]:focus, input[type="password"]:focus {$/;"	s
input[type="text"]	src/index.css	/^input[type="text"], input[type="password"] {$/;"	s
input[type="text"] :focus	src/index.css	/^input[type="text"]:focus, input[type="password"]:focus {$/;"	s
isLocalhost	src/serviceWorker.js	/^const isLocalhost = Boolean($/;"	C
login	src/actions.js	/^export const login = (username, password) => ($/;"	C
loginError	src/actions.js	/^export const loginError = (error) => ({$/;"	C
logout	src/actions.js	/^export const logout = () => {$/;"	C
main	src/index.js	/^    main: {$/;"	c	class:initialState
mapDispatchToProps	src/containers/FeedViewContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/FollowingViewContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/HeaderContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/LoginViewContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/ModalContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/NewCommentContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/NewPostContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/PostContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/SearchResultsViewContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/SignupViewContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/UserCardContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/UserPicContainer.js	/^const mapDispatchToProps = dispatch => ({$/;"	C
mapDispatchToProps	src/containers/UserViewContainer.js	/^const mapDispatchToProps = dispatch => {$/;"	C
mapStateToProps	src/containers/FeedViewContainer.js	/^const mapStateToProps = state => {$/;"	C
mapStateToProps	src/containers/FollowingViewContainer.js	/^const mapStateToProps = state => {$/;"	C
mapStateToProps	src/containers/HeaderContainer.js	/^const mapStateToProps = state => ({$/;"	C
mapStateToProps	src/containers/LoginViewContainer.js	/^const mapStateToProps = state => ({$/;"	C
mapStateToProps	src/containers/ModalContainer.js	/^const mapStateToProps = state => {$/;"	C
mapStateToProps	src/containers/NewCommentContainer.js	/^const mapStateToProps = (state, ownProps) => {$/;"	C
mapStateToProps	src/containers/NewPostContainer.js	/^const mapStateToProps = state => ({});$/;"	C
mapStateToProps	src/containers/PostContainer.js	/^const mapStateToProps = (state, ownProps) => {$/;"	C
mapStateToProps	src/containers/SearchResultsViewContainer.js	/^const mapStateToProps = state => {$/;"	C
mapStateToProps	src/containers/SignupViewContainer.js	/^const mapStateToProps = (state, ownProps) => {$/;"	C
mapStateToProps	src/containers/UserCardContainer.js	/^const mapStateToProps = (state, ownProps) => ({$/;"	C
mapStateToProps	src/containers/UserPicContainer.js	/^const mapStateToProps = (state, ownProps) => {$/;"	C
mapStateToProps	src/containers/UserViewContainer.js	/^const mapStateToProps = (state, ownProps) => {$/;"	C
newPost	src/actions.js	/^export const newPost = (postContent) => {$/;"	C
onConfirmPasswordChange	src/components/SignupViewComponent.js	/^    onConfirmPasswordChange(event) {$/;"	m	class:SignupViewComponent
onContentChange	src/components/NewPostComponent.js	/^    onContentChange(event) {$/;"	m	class:NewPostComponent
onImageSelect	src/components/EditProfile.js	/^    onImageSelect() {$/;"	m	class:EditProfile
onInputChange	src/components/SearchBox.js	/^    onInputChange(event) {$/;"	m	class:SearchBox
onNewComment	src/components/PostComponent.js	/^    onNewComment(comment) {$/;"	m	class:PostComponent
onPasswordChange	src/components/LoginViewComponent.js	/^    onPasswordChange(event) {$/;"	m	class:LoginViewComponent
onPasswordChange	src/components/SignupViewComponent.js	/^    onPasswordChange(event) {$/;"	m	class:SignupViewComponent
onQuoteInputChange	src/components/PostComponent.js	/^    onQuoteInputChange(e) {$/;"	m	class:PostComponent
onQuoteSubmit	src/components/PostComponent.js	/^    onQuoteSubmit(e) {$/;"	m	class:PostComponent
onSearch	src/components/SearchBox.js	/^    onSearch(event) {$/;"	m	class:SearchBox
onSubmit	src/components/LoginViewComponent.js	/^    onSubmit(e) {$/;"	m	class:LoginViewComponent
onUsernameChange	src/components/LoginViewComponent.js	/^    onUsernameChange(event) {$/;"	m	class:LoginViewComponent
onUsernameChange	src/components/SignupViewComponent.js	/^    onUsernameChange(event) {$/;"	m	class:SignupViewComponent
onloadend	src/components/EditProfile.js	/^        reader.onloadend = function () {$/;"	f	function:reader
openCommentSection	src/components/PostComponent.js	/^    openCommentSection() {$/;"	m	class:PostComponent
password	src/components/LoginViewComponent.js	/^        this.state = {username: "", password: ""};$/;"	p	class:LoginViewComponent.constructor.state
password	src/components/SignupViewComponent.js	/^        this.state = {username: "", password: "", confirmPassword: "", signup: false};$/;"	p	class:SignupViewComponent.constructor.state
pic	src/components/EditProfile.js	/^            pic: ""$/;"	p	class:EditProfile.constructor.state
post	src/components/NewPostComponent.js	/^        this.state = {"post": ""};$/;"	p	class:NewPostComponent.constructor.state
post	src/selectors.js	/^        let post = state.main.posts[postId];$/;"	v
posts	src/selectors.js	/^    let posts = [];$/;"	v
profileSubmit	src/components/EditProfile.js	/^    profileSubmit(event) {$/;"	m	class:EditProfile
quote	src/actions.js	/^export const quote = (postId, quoteContent) => {$/;"	C
quote	src/components/PostComponent.js	/^    quote() {$/;"	m	class:PostComponent
quoteContent	src/components/PostComponent.js	/^        this.state = {commentSection: false, userpic: "", comments: [], quoting: false, quoteCon/;"	p	class:PostComponent.constructor.state
quoting	src/components/PostComponent.js	/^        this.state = {commentSection: false, userpic: "", comments: [], quoting: false, quoteCon/;"	p	class:PostComponent.constructor.state
receiveFeed	src/actions.js	/^export const receiveFeed = (data) => ({$/;"	C
receiveFollowing	src/actions.js	/^export const receiveFollowing = (following) => ({$/;"	C
receiveNewComment	src/actions.js	/^const receiveNewComment = (data) => ({$/;"	C
receiveNewPost	src/actions.js	/^const receiveNewPost = postData => ($/;"	C
receivePostComments	src/actions.js	/^export const receivePostComments = (postId, res) => ({$/;"	C
receiveSearch	src/actions.js	/^export const receiveSearch = data => ({$/;"	C
receiveSharedPost	src/actions.js	/^const receiveSharedPost = shareData => ({$/;"	C
receiveToken	src/actions.js	/^export const receiveToken = (token) => ({$/;"	C
receiveUserImage	src/actions.js	/^const receiveUserImage = (username, img) => ({$/;"	C
receiveUserPosts	src/actions.js	/^export const receiveUserPosts = (data) => ({$/;"	C
reducer	src/reducers.js	/^function reducer(state = {}, action) {$/;"	f
register	src/serviceWorker.js	/^export function register(config) {$/;"	f
registerValidSW	src/serviceWorker.js	/^function registerValidSW(swUrl, config) {$/;"	f
render	src/components/App.js	/^    render() {$/;"	m	class:App
render	src/components/Comment.js	/^    render() {$/;"	m	class:Comment
render	src/components/EditProfile.js	/^    render() {$/;"	m	class:EditProfile
render	src/components/FeedViewComponent.js	/^    render() {$/;"	m	class:FeedViewComponent
render	src/components/FollowingViewComponent.js	/^    render() {$/;"	m	class:FollowingViewComponent
render	src/components/HeaderComponent.js	/^    render() {$/;"	m	class:HeaderComponent
render	src/components/LoginViewComponent.js	/^    render() {$/;"	m	class:LoginViewComponent
render	src/components/ModalComponent.js	/^    render() {$/;"	m	class:ModalComponent
render	src/components/NewCommentComponent.js	/^    render() {$/;"	m	class:NewCommentComponent
render	src/components/NewPostComponent.js	/^    render() {$/;"	m	class:NewPostComponent
render	src/components/PostComponent.js	/^    render() {$/;"	m	class:PostComponent
render	src/components/PostContent.js	/^    render() {$/;"	m	class:PostContent
render	src/components/Quote.js	/^    render() {$/;"	m	class:Quote
render	src/components/SearchBox.js	/^    render() {$/;"	m	class:SearchBox
render	src/components/SearchResultsViewComponent.js	/^    render() {$/;"	m	class:SearchResultsViewComponent
render	src/components/SignupViewComponent.js	/^    render() {$/;"	m	class:SignupViewComponent
render	src/components/UserCardComponent.js	/^    render() {$/;"	m	class:UserCardComponent
render	src/components/UserPicComponent.js	/^    render() {$/;"	m	class:UserPicComponent
render	src/components/UserViewComponent.js	/^    render() {$/;"	m	class:UserViewComponent
requestFeed	src/actions.js	/^export const requestFeed = () => ({$/;"	C
searchTerm	src/components/SearchBox.js	/^        this.state = {searchTerm: "", toResult: false};$/;"	p	class:SearchBox.constructor.state
selectFeed	src/selectors.js	/^export const selectFeed = state => {$/;"	C
selectUserPosts	src/selectors.js	/^export const selectUserPosts = (state, username) => {$/;"	C
serverUrl	src/actions.js	/^const serverUrl = "https:\/\/chris-twitter-server.herokuapp.com";$/;"	C
setUserFollowed	src/actions.js	/^const setUserFollowed = (username, followed) => ({$/;"	C
sharePost	src/actions.js	/^export const sharePost = (postId) => {$/;"	C
showModal	src/actions.js	/^const showModal = text => ({$/;"	C
signup	src/actions.js	/^export const signup = (data) => {$/;"	C
signup	src/components/SignupViewComponent.js	/^        this.state = {username: "", password: "", confirmPassword: "", signup: false};$/;"	p	class:SignupViewComponent.constructor.state
state	src/components/Comment.js	/^        this.state = {userpic: ""};$/;"	c	class:Comment.constructor
state	src/components/EditProfile.js	/^        this.state = {$/;"	c	class:EditProfile.constructor
state	src/components/LoginViewComponent.js	/^        this.state = {username: "", password: ""};$/;"	c	class:LoginViewComponent.constructor
state	src/components/NewPostComponent.js	/^        this.state = {"post": ""};$/;"	c	class:NewPostComponent.constructor
state	src/components/PostComponent.js	/^        this.state = {commentSection: false, userpic: "", comments: [], quoting: false, quoteCon/;"	c	class:PostComponent.constructor
state	src/components/Quote.js	/^        this.state = {userpic: ""};$/;"	c	class:Quote.constructor
state	src/components/SearchBox.js	/^        this.state = {searchTerm: "", toResult: false};$/;"	c	class:SearchBox.constructor
state	src/components/SignupViewComponent.js	/^        this.state = {username: "", password: "", confirmPassword: "", signup: false};$/;"	c	class:SignupViewComponent.constructor
store	src/index.js	/^const store = createStore(createRootReducer(history), initialState, compose(applyMiddleware(rout/;"	C
submitNewComment	src/actions.js	/^export const submitNewComment = (data) => {$/;"	C
toResult	src/components/SearchBox.js	/^        this.state = {searchTerm: "", toResult: false};$/;"	p	class:SearchBox.constructor.state
token	src/index.js	/^        token: Cookies.get("token")$/;"	p	class:initialState.main
unfollow	src/actions.js	/^export const unfollow = (username) => {$/;"	C
unregister	src/serviceWorker.js	/^export function unregister() {$/;"	f
updateImage	src/actions.js	/^export const updateImage = (result) => {$/;"	C
url	src/actions.js	/^        let url = serverUrl + "\/search" + query;$/;"	v
url	src/actions.js	/^        let url = serverUrl + "\/users\/" + username + "\/img";$/;"	v
username	src/components/LoginViewComponent.js	/^        this.state = {username: "", password: ""};$/;"	p	class:LoginViewComponent.constructor.state
username	src/components/SignupViewComponent.js	/^        this.state = {username: "", password: "", confirmPassword: "", signup: false};$/;"	p	class:SignupViewComponent.constructor.state
username	src/containers/UserViewContainer.js	/^    let username = ownProps.match.params.id;$/;"	v
userpic	src/components/Comment.js	/^        this.state = {userpic: ""};$/;"	p	class:Comment.constructor.state
userpic	src/components/PostComponent.js	/^        this.state = {commentSection: false, userpic: "", comments: [], quoting: false, quoteCon/;"	p	class:PostComponent.constructor.state
userpic	src/components/Quote.js	/^        this.state = {userpic: ""};$/;"	p	class:Quote.constructor.state
users	src/containers/FollowingViewContainer.js	/^    let users = [];$/;"	v
